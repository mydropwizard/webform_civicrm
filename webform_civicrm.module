<?php

/**
 * @file
 * Contains webform_civicrm.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function webform_civicrm_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the webform_civicrm module.
    case 'help.page.webform_civicrm':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('CiviCRM and Webform integration') . '</p>';
      return $output;

    default:
  }
}

/**
 * Validation callback for webform submissions.
 */
function wf_crm_validate($form, FormStateInterface $form_state) {
  include_once __DIR__ . '/includes/wf_crm_webform_base.inc';
  include_once __DIR__ . '/includes/wf_crm_webform_postprocess.inc';
  $processor = wf_crm_webform_postprocess::singleton($form['#node']);
  // $processor->validate($form, $form_state);
}

/**
 * Return a value from nested arrays or objects.
 *
 * @param array|object $haystack
 *   The array to search
 * @param string $keys
 *   Pass a single key, or multiple keys separated by : to get a nested value
 * @param mixed $default
 *   Value to return if given array key does not exist
 * @param bool $strict
 *   Should we use empty or isset to determine if array key exists? If TRUE, use isset
 *
 * @return mixed
 *   found value or default
 */
function wf_crm_aval($haystack, $keys, $default = NULL, $strict = FALSE) {
  foreach (explode(':', $keys) as $key) {
    if (is_object($haystack)) {
      $haystack = (array) $haystack;
    }
    if (!is_array($haystack) || !isset($haystack[$key]) || (empty($haystack[$key]) && $default !== NULL && !$strict)) {
      return $default;
    }
    $haystack = $haystack[$key];
  }
  // $haystack has been reduced down to the item we want
  return $haystack;
}
